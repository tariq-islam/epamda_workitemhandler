
package net.exchangenetwork.wsdl.node._2;

import java.math.BigInteger;
import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import net.exchangenetwork.schema.node._2.GenericXmlType;
import net.exchangenetwork.schema.node._2.GetServices;
import net.exchangenetwork.schema.node._2.NodeDocumentType;
import net.exchangenetwork.schema.node._2.NodeStatusCode;
import net.exchangenetwork.schema.node._2.NotificationMessageType;
import net.exchangenetwork.schema.node._2.NotificationURIType;
import net.exchangenetwork.schema.node._2.ParameterType;
import net.exchangenetwork.schema.node._2.TransactionStatusCode;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "NetworkNodePortType2", targetNamespace = "http://www.exchangenetwork.net/wsdl/node/2")
@XmlSeeAlso({
    net.exchangenetwork.schema.node._2.ObjectFactory.class,
    org.w3._2005._05.xmlmime.ObjectFactory.class
})
public interface NetworkNodePortType2 {


    /**
     * User authentication method, must be called initially.
     * 
     * @param authenticationMethod
     * @param userId
     * @param domain
     * @param credential
     * @return
     *     returns java.lang.String
     * @throws NodeFaultMessage
     */
    @WebMethod(operationName = "Authenticate")
    @WebResult(name = "securityToken", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
    @RequestWrapper(localName = "Authenticate", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", className = "net.exchangenetwork.schema.node._2.Authenticate")
    @ResponseWrapper(localName = "AuthenticateResponse", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", className = "net.exchangenetwork.schema.node._2.AuthenticateResponse")
    public String authenticate(
        @WebParam(name = "userId", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
        String userId,
        @WebParam(name = "credential", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
        String credential,
        @WebParam(name = "domain", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
        String domain,
        @WebParam(name = "authenticationMethod", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
        String authenticationMethod)
        throws NodeFaultMessage
    ;

    /**
     * Submit one or more documents to the node.
     * 
     * @param dataflow
     * @param notificationURI
     * @param transactionId
     * @param statusDetail
     * @param status
     * @param documents
     * @param flowOperation
     * @param securityToken
     * @param recipient
     * @throws NodeFaultMessage
     */
    @WebMethod(operationName = "Submit")
    @RequestWrapper(localName = "Submit", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", className = "net.exchangenetwork.schema.node._2.Submit")
    @ResponseWrapper(localName = "SubmitResponse", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", className = "net.exchangenetwork.schema.node._2.StatusResponseType")
    public void submit(
        @WebParam(name = "securityToken", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
        String securityToken,
        @WebParam(name = "transactionId", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", mode = WebParam.Mode.INOUT)
        Holder<String> transactionId,
        @WebParam(name = "dataflow", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
        String dataflow,
        @WebParam(name = "flowOperation", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
        String flowOperation,
        @WebParam(name = "recipient", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
        List<String> recipient,
        @WebParam(name = "notificationURI", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
        List<NotificationURIType> notificationURI,
        @WebParam(name = "documents", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
        List<NodeDocumentType> documents,
        @WebParam(name = "status", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", mode = WebParam.Mode.OUT)
        Holder<TransactionStatusCode> status,
        @WebParam(name = "statusDetail", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", mode = WebParam.Mode.OUT)
        Holder<String> statusDetail)
        throws NodeFaultMessage
    ;

    /**
     * Check the status of a transaction
     * 
     * @param transactionId
     * @param statusDetail
     * @param status
     * @param securityToken
     * @throws NodeFaultMessage
     */
    @WebMethod(operationName = "GetStatus")
    @RequestWrapper(localName = "GetStatus", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", className = "net.exchangenetwork.schema.node._2.GetStatus")
    @ResponseWrapper(localName = "GetStatusResponse", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", className = "net.exchangenetwork.schema.node._2.StatusResponseType")
    public void getStatus(
        @WebParam(name = "securityToken", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
        String securityToken,
        @WebParam(name = "transactionId", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", mode = WebParam.Mode.INOUT)
        Holder<String> transactionId,
        @WebParam(name = "status", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", mode = WebParam.Mode.OUT)
        Holder<TransactionStatusCode> status,
        @WebParam(name = "statusDetail", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", mode = WebParam.Mode.OUT)
        Holder<String> statusDetail)
        throws NodeFaultMessage
    ;

    /**
     * Download one or more documents from the node
     * 
     * @param dataflow
     * @param transactionId
     * @param documents
     * @param securityToken
     * @throws NodeFaultMessage
     */
    @WebMethod(operationName = "Download")
    @RequestWrapper(localName = "Download", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", className = "net.exchangenetwork.schema.node._2.Download")
    @ResponseWrapper(localName = "DownloadResponse", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", className = "net.exchangenetwork.schema.node._2.DownloadResponse")
    public void download(
        @WebParam(name = "securityToken", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
        String securityToken,
        @WebParam(name = "dataflow", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
        String dataflow,
        @WebParam(name = "transactionId", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
        String transactionId,
        @WebParam(name = "documents", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", mode = WebParam.Mode.INOUT)
        Holder<List<NodeDocumentType>> documents)
        throws NodeFaultMessage
    ;

    /**
     * Notify document availability, network events, submission statuses
     * 
     * @param dataflow
     * @param transactionId
     * @param nodeAddress
     * @param statusDetail
     * @param status
     * @param securityToken
     * @param messages
     * @throws NodeFaultMessage
     */
    @WebMethod(operationName = "Notify")
    @RequestWrapper(localName = "Notify", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", className = "net.exchangenetwork.schema.node._2.Notify")
    @ResponseWrapper(localName = "NotifyResponse", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", className = "net.exchangenetwork.schema.node._2.StatusResponseType")
    public void notify(
        @WebParam(name = "securityToken", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
        String securityToken,
        @WebParam(name = "nodeAddress", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
        String nodeAddress,
        @WebParam(name = "dataflow", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
        String dataflow,
        @WebParam(name = "messages", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
        List<NotificationMessageType> messages,
        @WebParam(name = "transactionId", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", mode = WebParam.Mode.OUT)
        Holder<String> transactionId,
        @WebParam(name = "status", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", mode = WebParam.Mode.OUT)
        Holder<TransactionStatusCode> status,
        @WebParam(name = "statusDetail", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", mode = WebParam.Mode.OUT)
        Holder<String> statusDetail)
        throws NodeFaultMessage
    ;

    /**
     * Execute a database query
     * 
     * @param dataflow
     * @param results
     * @param securityToken
     * @param request
     * @param maxRows
     * @param rowId
     * @param rowCount
     * @param parameters
     * @param lastSet
     * @throws NodeFaultMessage
     */
    @WebMethod(operationName = "Query")
    @RequestWrapper(localName = "Query", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", className = "net.exchangenetwork.schema.node._2.Query")
    @ResponseWrapper(localName = "QueryResponse", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", className = "net.exchangenetwork.schema.node._2.ResultSetType")
    public void query(
        @WebParam(name = "securityToken", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
        String securityToken,
        @WebParam(name = "dataflow", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
        String dataflow,
        @WebParam(name = "request", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
        String request,
        @WebParam(name = "rowId", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", mode = WebParam.Mode.INOUT)
        Holder<BigInteger> rowId,
        @WebParam(name = "maxRows", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
        BigInteger maxRows,
        @WebParam(name = "parameters", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
        List<ParameterType> parameters,
        @WebParam(name = "rowCount", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", mode = WebParam.Mode.OUT)
        Holder<BigInteger> rowCount,
        @WebParam(name = "lastSet", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", mode = WebParam.Mode.OUT)
        Holder<Boolean> lastSet,
        @WebParam(name = "results", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", mode = WebParam.Mode.OUT)
        Holder<GenericXmlType> results)
        throws NodeFaultMessage
    ;

    /**
     * Request the node to invoke a specified web services.
     * 
     * @param transactionId
     * @param interfaceName
     * @param results
     * @param status
     * @param securityToken
     * @param parameters
     * @param methodName
     * @throws NodeFaultMessage
     */
    @WebMethod(operationName = "Execute")
    @RequestWrapper(localName = "Execute", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", className = "net.exchangenetwork.schema.node._2.Execute")
    @ResponseWrapper(localName = "ExecuteResponse", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", className = "net.exchangenetwork.schema.node._2.ExecuteResponse")
    public void execute(
        @WebParam(name = "securityToken", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
        String securityToken,
        @WebParam(name = "interfaceName", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
        String interfaceName,
        @WebParam(name = "methodName", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
        String methodName,
        @WebParam(name = "parameters", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
        List<ParameterType> parameters,
        @WebParam(name = "transactionId", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", mode = WebParam.Mode.OUT)
        Holder<String> transactionId,
        @WebParam(name = "status", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", mode = WebParam.Mode.OUT)
        Holder<TransactionStatusCode> status,
        @WebParam(name = "results", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", mode = WebParam.Mode.OUT)
        Holder<GenericXmlType> results)
        throws NodeFaultMessage
    ;

    /**
     * Solicit a lengthy database operation.
     * 
     * @param dataflow
     * @param transactionId
     * @param notificationURI
     * @param statusDetail
     * @param status
     * @param securityToken
     * @param request
     * @param parameters
     * @param recipient
     * @throws NodeFaultMessage
     */
    @WebMethod(operationName = "Solicit")
    @RequestWrapper(localName = "Solicit", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", className = "net.exchangenetwork.schema.node._2.Solicit")
    @ResponseWrapper(localName = "SolicitResponse", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", className = "net.exchangenetwork.schema.node._2.StatusResponseType")
    public void solicit(
        @WebParam(name = "securityToken", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
        String securityToken,
        @WebParam(name = "dataflow", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
        String dataflow,
        @WebParam(name = "request", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
        String request,
        @WebParam(name = "recipient", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
        List<String> recipient,
        @WebParam(name = "notificationURI", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
        List<NotificationURIType> notificationURI,
        @WebParam(name = "parameters", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
        List<ParameterType> parameters,
        @WebParam(name = "transactionId", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", mode = WebParam.Mode.OUT)
        Holder<String> transactionId,
        @WebParam(name = "status", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", mode = WebParam.Mode.OUT)
        Holder<TransactionStatusCode> status,
        @WebParam(name = "statusDetail", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", mode = WebParam.Mode.OUT)
        Holder<String> statusDetail)
        throws NodeFaultMessage
    ;

    /**
     * Check the status of the service
     * 
     * @param hello
     * @param statusDetail
     * @param nodeStatus
     * @throws NodeFaultMessage
     */
    @WebMethod(operationName = "NodePing")
    @RequestWrapper(localName = "NodePing", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", className = "net.exchangenetwork.schema.node._2.NodePing")
    @ResponseWrapper(localName = "NodePingResponse", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", className = "net.exchangenetwork.schema.node._2.NodePingResponse")
    public void nodePing(
        @WebParam(name = "hello", targetNamespace = "http://www.exchangenetwork.net/schema/node/2")
        String hello,
        @WebParam(name = "nodeStatus", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", mode = WebParam.Mode.OUT)
        Holder<NodeStatusCode> nodeStatus,
        @WebParam(name = "statusDetail", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", mode = WebParam.Mode.OUT)
        Holder<String> statusDetail)
        throws NodeFaultMessage
    ;

    /**
     * Query services offered by the node
     * 
     * @param parameter
     * @return
     *     returns net.exchangenetwork.schema.node._2.GenericXmlType
     * @throws NodeFaultMessage
     */
    @WebMethod(operationName = "GetServices")
    @WebResult(name = "GetServicesResponse", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", partName = "return")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public GenericXmlType getServices(
        @WebParam(name = "GetServices", targetNamespace = "http://www.exchangenetwork.net/schema/node/2", partName = "parameter")
        GetServices parameter)
        throws NodeFaultMessage
    ;

}
